一．文件命名规范
全局样式：global.css；
框架布局：layout.css；
字体样式：font.css；
链接样式：link.css；
打印样式：print.css；
二．常用类/ID命名规范
页 眉：header/top
内 容：content
容 器：container
页 脚：footer
版 权：copyright
导 航：menu
主导航：mainMenu
子导航：subMenu
标 志：logo
标 语：banner
标 题：title
侧边栏：sidebar
图 标：Icon
注 释：note
搜 索：search
按 钮：btn
登 录：login
链 接：link
信息框：manage
服务  : services
营业时间 : business Hours
工作时间 :  work Hour
主题 : theme
科目 : subject
通用 ：  general
#wrapper	页面外围控制整体布局宽度
#container或#content	容器,用于最外层
#layout	布局
#head, #header	页头部分
#foot, #footer	页脚部分
#nav	主导航
#subnav	二级导航
#menu	菜单
#submenu	子菜单
#sideBar	侧栏
#sidebar_a, #sidebar_b	左边栏或右边栏
#main	页面主体
#tag	标签
#msg #message	提示信息
#tips	小技巧
#vote	投票
#friendlink	友情连接
#title	标题
#summary	摘要
#loginbar	登录条
#searchInput	搜索输入框
#hot	热门热点
#search	搜索
#search_output	搜索输出和搜索结果相似
#searchBar	搜索条
#search_results	搜索结果
#copyright	版权信息
#branding	商标
#logo	网站LOGO标志
#siteinfo	网站信息
#siteinfoLegal	法律声明
#siteinfoCredits	信誉
#joinus	加入我们
#partner	合作伙伴
#service	服务
#regsiter	注册
arr/arrow	箭头
#guild	指南
#sitemap	网站地图
#list	列表
#homepage	首页
#subpage	二级页面子页面
#tool, #toolbar	工具条
#drop	下拉
#dorpmenu	下拉菜单
#status	状态
#scroll	滚动
.tab	标签页
.left .right .center	居左、中、右
.news	新闻
.download	下载
.banner	广告条(顶部广告条)
电子贸易相关
.products	产品
.products_prices	产品价格
.products_description	产品描述
.products_review	产品评论
.editor_review	编辑评论
.news_release	最新产品
.publisher	生产商
.screenshot	缩略图
.faqs	常见问题
.keyword	关键词
.blog	博客
.forum	论坛
CSS文件命名	说明
master.css,style.css	主要的
module.css	模块
base.css	基本共用
layout.css	布局，版面
themes.css	主题
columns.css	专栏
font.css	文字、字体
forms.css	表单
mend.css	补丁
print.css	打印
三、自定义命名：
1、常用类的命名应尽量以常见英文单词为准，做到通俗易懂，并在适当的地方加以注释。对于二级类/ID
命名，则采用组合书写的模式，后一个单词的首字母应大写：诸如“搜索框”则应命名为“searchInput”、“搜
索图标”命名这“searchIcon”、“搜索按钮”命名为“searchBtn”??
根据w3c网站上给出的,最好是用意义命名
比如：是重要的新闻高亮显示（像红色）
有两种
.red{color:red}
.important-news{color:red}
很显然第二种传达的意义更加明确,所以尽量不要用意义不明确的作为自己自定义的名字
id就是你的身分证号, class就是你的类别
我叫你所属的class可能有一群人回头, 但是叫你的id就只有你一个人知道 #针对一类元素来修饰, id只对特定的某个元素


注意：




















==================================
#skillareas ol .skill .skillset li { border-bottom:1px dashed #cccccc; } 这个是一种简便的写法, 说白了就是
#skillareas { border-bottom:1px dashed #cccccc; }
ol { border-bottom:1px dashed #cccccc; }
.skill { border-bottom:1px dashed #cccccc; }
skillset { border-bottom:1px dashed #cccccc; }
li { border-bottom:1px dashed #cccccc; }
的缩写
2、辅助图片用背影图处理：
这里的”辅助图片”是指那些不是作为页面要表达的内容的一部分，而仅仅用于修饰、间隔、提醒的图片
。将其做背影图处理，可以在不改动页面的情况下通过CSS样式来进行改动，如： #logo {background:url(images/logo.jpg) #FEFEFE no-repeat right bottom;}
8、文档的结构化书写：
页面CSS文档都应采用结构化的书写方式，逻辑清晰易于阅读。如： <div id=”mainMenu”>
<ul>
<li><a href=”#” >首页</a></li>
<li><a href=”#” >介绍</a></li>
<li><a href=”#” >服务</a></li>
</ul>
</div>
/*=====主导航=====*/
#mainMenu {
width:100%;
height:30px;
background:url(images/mainMenu_bg.jpg) repeat-x;
}
#mainMenu ul li {
float:left;
line-height:30px;
margin-right:1px;
cursor:pointer;
}
/*=====主导航结束=====*/
四．注释书写规范
1、行间注释：
直接写于属性值后面，如：
.search{
border:1px solid #fff;/*定义搜索输入框边框*/
background:url(../images/icon.gif) no-report #333;/*定义搜索框的背景*/
}
2、整段注释：
分别在开始及结束地方加入注释，如：
/*=====搜索条=====*/
.search {
border:1px solid #fff;
background:url(../images/icon.gif) no-repeat #333;
}
/*=====搜索条结束=====*/
五．样式属性代码缩写
1、不同类有相同属性及属性值的缩写：
对于两个不同的类，但是其中有部分相同甚至是全部相同的属性及属性值时，应对其加以合并缩写，
特别是当有多个不同的类而有相同的属性及属性值时，合并缩写可以减少代码量并易于控制。如：
#mainMenu {
background:url(../images/bg.gif);
border:1px solid #333;
width:100%;
height:30px;
overflow:hidden;
}
#subMenu {
background:url(../images/bg.gif);
border:1px solid #333;
width:100%;
height:20px;
overflow:hidden;
}
两个不同类的属性值有重复之处，刚可以缩写为： #mainMenu,#subMenu {
background:url(../images/bg.gif);
border:1px solid #333;
width:100%;
overflow:hidden;
}
#mainMenu {height:30px;}
#subMenu {height:20px;}
2、同一属性的缩写：
同一属性根据它的属性值也可以进行简写，如： .search {
background-color:#333;
background-image:url(../images/icon.gif);background-repeat: no-repeat;
background-position:50% 50%;
}
.search {
background:#333 url(../images/icon.gif) no-repeat 50% 50%; }
3、内外侧边框的缩写：
在CSS中关于内外侧边框的距离是按照上、右、下、左的顺序来排列的，当这四个属性值不同时也可直
接缩写，如：
.btn {
margin-top:10px;
margin-right:8px;
margin-bottom:12px;
margin-left:5px;
padding-top:10px;
padding-right:8px;
padding-bottom:12px;
padding-left:8px;
}
则可缩写为：
.btn {
Margin:10px 8px 12px 5px;
Padding:10px 8px 12px 5px;
第7 / 11页
}
而如果当上边与下边、左边与右边的边框属性值相同时，则属性值可以直接缩写为两个，如：
.btn {
margin-top:10px;
margin-right:5px;
margin-bottom:10px;
margin-left:5px;
}
缩写为：
.btn {margin:10px 5px;}
而当上下左右四个边框的属性值都相同时，则可以直接缩写成一个，如： .btn {
margin-top:10px;
margin-right:10px;
margin-bottom:10px;
margin-left:10px;
}
缩写为：
.btn{margin:10px;}
4、颜色值的缩写：
当RGB三个颜色值数值相同时，可缩写颜色值代码。如：
.menu { color:#ff3333;}
第8 / 11页
可缩写为:
.menu {color:#f33;}
*************************************************************************************************************
问题建议
一.CSS的书写建议
1.给CSS文件加注释。注释会为你今后的维护带来方便，建议尽可能给CSS文件加注释，不要担心增加少量的字节。
2.尽量简写CSS语法。比如颜色值"#FFFFFF"可以简写成
"#FFF";"padding-top:30px;Padding-right:0;padding-bottom:10px;padding-left:20p
x"可以简写为"padding:30px 0 10px 20px;"。在定义技巧上有更多的节省技巧，随着对CSS应用的熟练，你会不断发现更好的办法。
二.XHTML校验的问题
因为是样式表比赛，大家对CSS的校验比较注意，但在XHTML符合标准方面有点忽视，出现很多低级错误。主要问题罗列如下：
1.target="_blank"，这个语法在HTML4.0里是正确的，在XHTML1.0里是不允许使用的。解决的办法之一是写成target="new"；
2.样式表最好不要内嵌，将样式表文件独立出来易于维护。如果内嵌<style>一定要写成<style type="text/css">，其中的type不能忽略，否
则XHTML无法判断你的style作用在什么方面。
3.<br>必须写成<br />，XHTML要求所有的标签必须关闭，不成对的标签直接在后面加" /"。
第9 / 11页
4.重复使用同一ID。一个ID在XHTML中只能使用1次，如果需要多次引用样式，应该使用class。
5.<meta http-equiv="Content-Type" content="text/html; charset="gb2312" />很明显content属性值里面多了一个引号。
6.Flash的嵌入方法错误。<embed>最早是Netscape的私有标签，即使后来为IE所支持，但始终没有被W3C承认，在HTML4.0没有<embed>这个标签
。W3C主张的是采用<object>标签。为了解决不同浏览器的兼容，有一个变通的解决方法是2个标签都采用。完整的示例代码如下(flash背景为
透明)：
<object classid="clsid:27CDB6E-AE6D-11cf-96B8-444553540000"
codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=5,0,0,0" width="300" height="100">
<param name="quality" value="high">
<param name="wmode" value="transparent">
<param name="SRC" value="test.swf">
<embed src="test.swf" wmode="transparent" quality="high"
pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash"
type="application/x-shockwave-flash" width="300" height="100"> </embed>
</object>
但直接写在XHTML中依然不可以，我们现在只能通过把上面代码写在flash.js文件里，然后再调用来骗过校验。
<script type="text/javascript" src="flash.js"></script>
关于flash是否符合标准，是一个存在争议的问题。更多说明：参考
第10 / 11页
http://www.blueidea.com/tech/site/2004/1920.asp
7.类似id=header class=title代码都应该写成id="header" class="title"。给属性值加引号是最XHTML基本的语法规则。
