	

react + backbones

与jquery相比有什么优势：
为什么要使用Angular？，
----------------------------------	----------------------------------

关于 Angular：
	1  jquery：我拥有一个DOM元素并且想让它去做某件事
	   Angular： 我需要完成什么任务，然后接着设计你的应用，最后再去设计你的视图view层


优点：
	1 动态视图：以前从来没有想过js可以如此扩展HTML的属性，但是AngularJs做到了，它替我们静态的HTML加了很多扩展性功能，有一种让HTML由死变活的感觉。
	2 angularjs是互联网巨人谷歌开发，这也意味着他有一个坚实的基础和社区支持。
	3 完善：是一个比较完善的前端MVW框架，包含模板，数据双向绑定，路由，模块化，服务，依赖注入等所有功能，模板功能强大丰富，并且是声明式的，自带了丰富的 Angular 指令。
	
缺点：不适合类型开发：
	1：内容网站，需要SEO的。(SEO目前也有了prerender解决方案) https//prerender.io
	2：交互频繁的，如游戏之类交互体验网站。
	3，太过于简单的页面。
	4，复杂的dom修改的开发
	5 大而全：学习起来有难度，对于我来讲学习曲线很曲折，比较难理解一些。


AngularJS有五个主要核心特性:
	1 双向数据绑定 —— 实现了把 model 与 view 完全绑定在一起， model 变化， view 也变化，反之亦然。
	2 模板 —— 在AngularJS中，模板相当于HTML文件被浏览器解析到DOM中，AngularJS遍历这些DOM，也就是说AuguarJS把模板当做DOM来操作，去生成一些指令来完成对view的数据绑定。
	3 MVVM —— 吸收了传统的MVC设计模式针但又并不执行传统意义上的MVC，更接近于MVVM(Moodel-View-ViewModel)。//
	4 依赖注入 —— AngularJS拥有内建的依赖注入子系统，可以帮助开发人员更容易的开发，理解和测试应用。
	5 指令 —— 可以用来创建自定义的标签，也可以用来装饰元素或者操作DOM属性。


双向数据绑定：
	关于数据双向绑定的几个关键api有$watch()、$apply()以及$digest()。	
		$watch()用于视图向模型的检测
		$apply()用于模型向视图的渲染。
		$watch()监测模型是否发生变化

		$scope.$apply()执行会自动触发$rootScope.$digest()：
			在模型发生变化真正执行后续操作需要执行$digest()对watch队列进行循环检测。然而只有进入angular 的上下文环境才能执行$digest()循环检测，而进入angular的上下文环境需要执行$apply()。
			即：	执行$appil() >>  进入 angular 上下文环境 >> 执行$digest()循环检测

		两种绑定的方式：{{}}和ng-model
		例如：一个输入框<input>和一个段落标记<p>。

angular 指令：
	1 ng-app   添加ng-app directive到<html>标签；告诉angular里面的指令需要被Angular编译器所编译、解析；
		语法：  ng-app=""    引号内可以是自定义代号；
		一个网页可以包含多个运行在不同元素中的 AngularJS 应用程序。
 	2 ng-init  初始化应用程序数据
 		语法：  ng-init="name='Hello World'"
	3 ng-model 指令把元素值（比如输入域的值）绑定到应用程序。




























